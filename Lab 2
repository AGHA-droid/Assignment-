# Q1
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, 
data = pd.DataFrame({
    'Predictor1': [1, 2, 3, 4, 5],
    'Predictor2': [2, 4, 6, 8, 10],
    'Target': [2.5, 5.0, 7.5, 10.0, 12.5]
})
X = data[['Predictor1', 'Predictor2']]
y = data['Target']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)
print("MSE:", mean_squared_error(y_test, y_pred))
print("R^2 Score:", r2_score(y_test, y_pred))
# Q2
X_subset = data[['Predictor1']]  # Only one predictor
X_train, X_test, y_train, y_test = train_test_split(X_subset, y, test_size=0.3, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Using Predictor1:")
print("Coefficient:", model.coef_)
print("Intercept:", model.intercept_)
print("MSE:", mean_squared_error(y_test, y_pred))
print("R^2 Score:", r2_score(y_test, y_pred))
# Q3
from sklearn.preprocessing import PolynomialFeatures
import matplotlib.pyplot as plt

X_poly = data[['Predictor1']]
poly = PolynomialFeatures(degree=3)  # Degree 3 polynomial
X_poly_transformed = poly.fit_transform(X_poly)
X_train, X_test, y_train, y_test = train_test_split(X_poly_transformed, y, test_size=0.3, random_state=42)
poly_model = LinearRegression()
poly_model.fit(X_train, y_train)
y_poly_pred = poly_model.predict(X_test)
print("MSE (Polynomial Regression):", mean_squared_error(y_test, y_poly_pred))
print("R^2 Score (Polynomial Regression):", r2_score(y_test, y_poly_pred))
plt.scatter(X_poly, y, color='blue', label='Original Data')
plt.plot(X_poly, poly_model.predict(poly.transform(X_poly)), color='red', label='Polynomial Fit')
plt.title("Polynomial Regression (Degree 3)")
plt.legend()
plt.show()
# Q4

data_new = pd.DataFrame({
    'Predictor1': [1, 2, 3, 4, 5, 6, 7, 8],
    'Target': [1, 4, 9, 16, 25, 36, 49, 64]
})

X_new = data_new[['Predictor1']]
y_new = data_new['Target']

poly = PolynomialFeatures(degree=2)
X_new_poly = poly.fit_transform(X_new)

X_train, X_test, y_train, y_test = train_test_split(X_new_poly, y_new, test_size=0.3, random_state=42)

poly_model = LinearRegression()
poly_model.fit(X_train, y_train)
y_poly_pred = poly_model.predict(X_test)

print("New Dataset (Degree 2):")
print("MSE:", mean_squared_error(y_test, y_poly_pred))
print("R^2 Score:", r2_score(y_test, y_poly_pred))

plt.scatter(X_new, y_new, color='blue', label='Original Data')
plt.plot(X_new, poly_model.predict(poly.transform(X_new)), color='green', label='Polynomial Fit (Degree 2)')
plt.title("Polynomial Regression on New Dataset")
plt.legend()
plt.show()
